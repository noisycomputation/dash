version: 2.1
commands:
  save_cache_cmd:
    steps:
      - save_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "requires-dev.txt" }}-{{ checksum "requires-install.txt" }}-{{ checksum "requires-testing.txt" }}
          paths:
              - venv

  restore_cache_cmd:
    steps:
      - restore_cache:
          key: dep-{{ checksum ".circleci/config.yml" }}-{{ checksum "ver.txt" }}-{{ checksum "requires-dev.txt" }}-{{ checksum "requires-install.txt" }}-{{ checksum "requires-testing.txt" }}

  requires_install_remove_dash_cmd:
    steps:
      - run:
          name: remove dash from requires-install.txt
          command: sed -i 's/^dash/#dash/' requires-install.txt

  requires_install_restore_dash_cmd:
    steps:
      - run:
          name: restore dash to requires-install.txt
          command: sed -i 's/^#dash/dash/' requires-install.txt

  build_core_dev_requirements_cmd:
    steps:
      - requires_install_remove_dash_cmd
      - run:
          name: ️️🏗️ build core dev requirements
          command: |
            python -m venv venv && source venv/bin/activate
            pip install -e . --no-cache-dir -r requires-install.txt -r requires-dev.txt -r requires-testing.txt --progress-bar off

            # dash-renderer needs to be installed in the venv in order to run the `renderer` tool
            cd dash-renderer && npm ci && pip install -e . --no-cache-dir && cd ..
      - requires_install_restore_dash_cmd

  install_built_packages_cmd:
    steps:
      - run:
          name: ️️🏗️  Install built packages
          command: |
            rm -rf venv && python -m venv venv && source venv/bin/activate
            npm install --production
            cd packages && ls -la
            find . -type f \( -name "dash*.gz" ! -name "dash?noisycomputation*.gz" \) | xargs pip install --no-cache-dir --ignore-installed
            find . -name "dash*.gz" | xargs pip install --no-cache-dir && cd ..
            pip install --no-cache-dir -r requires-install.txt -r requires-dev.txt -r requires-testing.txt
            pip list | grep dash


jobs:
  percy-finalize:
    docker:
      - image: percyio/agent
    steps:
      - run: percy finalize --all


  artifacts:
    docker:
      - image: circleci/python:3.7-stretch-node-browsers
        environment:
          PYVERSION: python37
    steps:
      - checkout
      - run: echo $PYVERSION > ver.txt
      - attach_workspace:
          at: ~/dash
      - store_artifacts:
          path: ~/dash/packages
          destination: /tmp/packages


  build-core-37: &build-core
    working_directory: ~/dash
    docker:
      - image: circleci/python:3.7-stretch-node-browsers
        environment:
          PYLINTRC: .pylintrc37
          PYVERSION: python37
    steps:
      - checkout
      - run: echo $PYVERSION > ver.txt
      - restore_cache_cmd
      - build_core_dev_requirements_cmd
      - requires_install_remove_dash_cmd
      - run:
          name: ️️🏗️ build core dash-renderer
          command: |
              source venv/bin/activate && pip install --no-cache-dir --upgrade -e . --progress-bar off && mkdir packages
              cd dash-renderer && renderer build && python setup.py sdist && mv dist/* ../packages/ && cd ..
              ls -la packages
      - requires_install_restore_dash_cmd
      - run:
          name: ️️🏗️ build core dash
          command: |
              source venv/bin/activate
              python setup.py sdist && mv dist/* packages/
              ls -la packages
      - save_cache_cmd
      - persist_to_workspace:
          root: ~/dash
          paths:
            - packages/*.tar.gz


  build-misc-37: &build-misc
    working_directory: ~/dash
    docker:
      - image: circleci/python:3.7-stretch-node-browsers
        environment:
          PYVERSION: python37
    steps:
      - checkout
      - run: echo $PYVERSION > ver.txt
      - restore_cache_cmd
      - requires_install_remove_dash_cmd
      - run:
          name: ️️🏗️ build misc
          command: |
              source venv/bin/activate && pip install --no-cache-dir --upgrade -e . --progress-bar off && mkdir packages

              git clone --depth 1 https://github.com/noisycomputation/dash-core-components.git
              cd dash-core-components && npm ci && npm run build && python setup.py sdist && mv dist/* ../packages/  && cd ..

              git clone --depth 1 https://github.com/plotly/dash-renderer-test-components
              cd dash-renderer-test-components && npm ci && npm run build:all && python setup.py sdist && mv dist/* ../packages/ && cd ..

              git clone --depth 1 https://github.com/noisycomputation/dash-table.git
              cd dash-table && npm ci && npm run build && python setup.py sdist && mv dist/* ../packages/ && cd ..

              git clone --depth 1 https://github.com/noisycomputation/dash-html-components.git
              cd dash-html-components && npm ci && npm run build && python setup.py sdist && mv dist/* ../packages/ && cd ..

              ls -la packages
      - requires_install_restore_dash_cmd
      - persist_to_workspace:
          root: ~/dash
          paths:
            - packages/*.tar.gz


  lint-unit-37: &lint-unit
    working_directory: ~/dash
    docker:
      - image: circleci/python:3.7-stretch-node-browsers
        environment:
          PYVERSION: python37
    steps:
      - checkout
      - run: echo $PYVERSION > ver.txt
      - attach_workspace:
          at: ~/dash
      - install_built_packages_cmd
      - run:
          name: 🌸 Python & JS Lint
          command: |
            source venv/bin/activate
            set -eo pipefail
            pip list | grep dash
            npm install --production && npm run initialize
            npm run lint --force
      - run:
          name: 🐍 Python Unit Tests & ☕ JS Unit Tests
          command: |
            source venv/bin/activate
            npm run test.unit


  test-37: &test
    working_directory: ~/dash
    docker:
      - image: circleci/python:3.7-stretch-node-browsers
        environment:
          PERCY_PARALLEL_TOTAL: -1
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: True
          PYVERSION: python37
    #parallelism: 3
    steps:
      - checkout
      - run: echo $PYVERSION > ver.txt
      - attach_workspace:
          at: ~/dash
      - install_built_packages_cmd
      - run:
          name: 🧪 Run Integration Tests
          command: |
            source venv/bin/activate
            set -eo pipefail
            npm run test.integration
      - store_artifacts:
          path: test-reports
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: /tmp/dash_artifacts
      - run:
          name: 🦔 percy finalize
          command: npx percy finalize --all
          when: on_fail


workflows:
  version: 2
  python3.7:
    jobs:
      - build-core-37:
          filters:
            branches:
              only:
                - noisy
      - build-misc-37:
          requires:
            - build-core-37
          filters:
            branches:
              only:
                - noisy
      - lint-unit-37:
          requires:
            - build-core-37
            - build-misc-37
          filters:
            branches:
              only:
                - noisy
      - test-37:
          requires:
            - build-core-37
            - build-misc-37
          filters:
            branches:
              only:
                - noisy
      - percy-finalize:
          requires:
            - test-37
          filters:
            branches:
              only:
                - noisy
      - artifacts:
          requires:
            #- percy-finalize
            - build-misc-37
          filters:
            branches:
              only:
                - noisy
